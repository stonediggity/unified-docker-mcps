# Build stage - download and prepare Chrome/Puppeteer
FROM mcp-base:latest AS builder

# Switch to root to install Chrome and dependencies
USER root

# Install Chrome dependencies and Chrome itself
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libc6 \
    libcairo2 \
    libcups2 \
    libdbus-1-3 \
    libexpat1 \
    libfontconfig1 \
    libgbm1 \
    libgcc1 \
    libglib2.0-0 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libstdc++6 \
    libx11-6 \
    libx11-xcb1 \
    libxcb1 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxi6 \
    libxrandr2 \
    libxrender1 \
    libxss1 \
    libxtst6 \
    lsb-release \
    xdg-utils \
    && rm -rf /var/lib/apt/lists/*

# Pre-download Puppeteer and Chrome for better caching
USER mcpuser
RUN npx puppeteer-mcp-server --version || true

# Production stage - minimal runtime with Chrome
FROM mcp-base:latest AS production

# Switch to root to install runtime Chrome dependencies
USER root

# Install only runtime Chrome dependencies (no build tools)
RUN apt-get update && apt-get install -y \
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libcairo2 \
    libcups2 \
    libdbus-1-3 \
    libgbm1 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libx11-6 \
    libx11-xcb1 \
    libxcomposite1 \
    libxrandr2 \
    libxss1 \
    xdg-utils \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Add user to audio and video groups for Chrome
RUN usermod -a -G audio,video mcpuser

# Copy any downloaded dependencies from builder
COPY --from=builder --chown=mcpuser:mcpuser /home/mcpuser/.npm /home/mcpuser/.npm

# Switch back to non-root user
USER mcpuser

# npx is included with Node.js

# Set Chrome to run in no-sandbox mode for container
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=false
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable

# Run the Puppeteer MCP server
CMD ["npx", "-y", "puppeteer-mcp-server"]